buildscript {

    /*
    * ext: build.gradle에서 사용하는 전역변수로 설정
    *       springBootVersion 이라는 전역 변수 사용
    */
    ext{
        springBootVersion = '2.1.7.RELEASE'
    }

    /*
    * repositories : 각종 의존성들을 어떤 원격 저장소에서 받을지 결정
    *       기본적으로 mavenCentral을 사용
    *       jcenter는 라이브러리 업로드를 간단하게 해주는 저장소
    */
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

/*
* apply plugin : 앞서 선언한 플러그인 의존성들을 적용할 것인지를 결정하는 코드
*       io.spring.dependency-management 플러그인은 스프링 부트의 의존성을 관리해주는 필수 플러그인
*/
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.jojoldu.book'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.projectlombok:lombok')
    /*
        spring-boot-starter-data-jpa
        스프링 부트용 Spring Data Jpa 추상화 라이브러리
        스프링 부트 버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전 관리
        
        h2
        인메모리 관계형 DB
        별도 설치 필요없이 프로젝트 의존성만으로 관리 가능
        메모리에서 실행되기 때문에 애플리케이션을 재시작할 때 마다 초기화된다는 점을 이용하여 테스트 용도로 많이 사용
        JPA 테스트, 로컬환경에서 구동에서 사용 예정
     */
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('com.h2database:h2')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc')
    testCompile("org.springframework.security:spring-security-test")
}